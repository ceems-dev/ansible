---
- name: Assert usage of systemd as an init system
  ansible.builtin.assert:
    that: ansible_service_mgr == 'systemd'
    msg: This role only works with systemd

- name: Assert litestream config is not empty
  ansible.builtin.assert:
    that: litestream_config | length > 0
    msg: Litestream config should not be empty

- name: Install package fact dependencies
  become: true
  ansible.builtin.package:
    name: "{{ _pkg_fact_req }}"
    state: present
  when: (_pkg_fact_req)
  vars:
    _pkg_fact_req: "{% if (ansible_pkg_mgr == 'apt') %}\
      {{ ('python-apt' if ansible_python_version is version('3', '<') else 'python3-apt') }}
      {% else %}\
      {% endif %}"

- name: Gather package facts
  ansible.builtin.package_facts:
  when: not 'packages' in ansible_facts

- name: Check if litestream is installed
  ansible.builtin.stat:
    path: "{{ litestream_binary_install_dir }}/litestream"
  register: __litestream_is_installed
  check_mode: false
  tags:
    - litestream_install

- name: Gather currently installed litestream version (if any)
  ansible.builtin.command: "{{ litestream_binary_install_dir }}/litestream version"
  changed_when: false
  register: __litestream_current_version_output
  check_mode: false
  when: __litestream_is_installed.stat.exists
  tags:
    - litestream_install

- name: Discover latest version
  ansible.builtin.set_fact:
    litestream_version: "{{ (lookup('url', 'https://api.github.com/repos/{{ _litestream_repo }}/releases/latest',
      headers=_github_api_headers, split_lines=False) | from_json).get('tag_name') | replace('v',
      '') }}"
  run_once: true
  until: litestream_version is version('0.0.0', '>=')
  retries: 10
  when:
    - litestream_version == "latest"
    - litestream_binary_local_dir | length == 0
    - not litestream_skip_install
