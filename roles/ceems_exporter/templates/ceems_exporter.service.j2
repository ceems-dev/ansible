{{ ansible_managed | comment }}

[Unit]
Description=Prometheus CEEMS Exporter
After=network-online.target

[Service]
Type=simple
User={{ ceems_exporter_system_user }}
Group={{ ceems_exporter_system_group }}
ExecStart={{ ceems_exporter_binary_install_dir }}/ceems_exporter \
{% for collector in ceems_exporter_enabled_collectors -%}
    --collector.{{ collector }} \
{% endfor -%}
{% for collector in ceems_exporter_disabled_collectors %}
    --no-collector.{{ collector }} \
{% endfor %}
{% if ceems_exporter_tls_server_config | length > 0 or ceems_exporter_http_server_config | length > 0 or ceems_exporter_basic_auth_users | length > 0 %}
    --web.config.file=/etc/ceems_exporter/config.yaml \
{% endif %}
{% if ceems_exporter_redfish_web_config | length > 0 %}
{% if 'redfish' not in ceems_exporter_enabled_collectors %}
    --collector.redfish \
{% endif %}
    --collector.redfish.web-config=/etc/ceems_exporter/redfish-config.yaml \
{% endif %}
{% if ceems_exporter_web_listen_address is iterable and
      ceems_exporter_web_listen_address is not mapping and
      ceems_exporter_web_listen_address is not string %}
{%   for address in ceems_exporter_web_listen_address %}
    --web.listen-address={{ address }} \
{%   endfor %}
{% endif %}
{% for cli_arg in ceems_exporter_cli_args %}
    {{ cli_arg }} \
{% endfor %}
    --web.telemetry-path={{ ceems_exporter_web_telemetry_path }}

SyslogIdentifier=ceems_exporter
Restart=always
RestartSec=1
StartLimitInterval=0

{% set ns = namespace(protect_home = 'yes', caps = []) %}
{% for m in ansible_mounts if m.mount.startswith('/home') %}
{%   set ns.protect_home = 'read-only' %}
{% endfor %}
ProtectHome={{ ns.protect_home }}

# CEEMS Exporter is capability aware which means it drops all unnecessary capabilities based on
# runtime configuration. Thus, all these capabilities will not set on actual process if
# the collectors that do need them are not enabled.
AmbientCapabilities=CAP_SYS_PTRACE CAP_DAC_READ_SEARCH CAP_SETUID CAP_SETGID CAP_DAC_OVERRIDE CAP_BPF CAP_PERFMON CAP_SYS_RESOURCE
CapabilityBoundingSet=CAP_SYS_PTRACE CAP_DAC_READ_SEARCH CAP_SETUID CAP_SETGID CAP_DAC_OVERRIDE CAP_BPF CAP_PERFMON CAP_SYS_RESOURCE

{% if ceems_exporter_env_vars | length > 0 %}
{% for k, v in ceems_exporter_env_vars.items() %}
Environment={{ k }}={{ v }}
{% endfor %}
{% endif %}

{% if (ansible_facts.packages.systemd | first).version is version('232', '>=') %}
ProtectSystem=strict
ProtectControlGroups=true
ProtectKernelModules=true
ProtectKernelTunables=yes
{% else %}
ProtectSystem=full
{% endif %}

[Install]
WantedBy=multi-user.target
