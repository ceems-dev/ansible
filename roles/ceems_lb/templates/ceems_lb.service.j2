{{ ansible_managed | comment }}

[Unit]
Description=CEEMS load balancer
After=network-online.target

[Service]
Type=simple
User={{ ceems_lb_system_user }}
Group={{ ceems_lb_system_group }}
ExecStart={{ ceems_lb_binary_install_dir }}/ceems_lb \
{% if ceems_lb_web_listen_address is iterable and
      ceems_lb_web_listen_address is not mapping and
      ceems_lb_web_listen_address is not string %}
{%   for address in ceems_lb_web_listen_address %}
    --web.listen-address={{ address }} \
{%   endfor %}
{% elif ceems_lb_web_listen_address is string %}
    --web.listen-address={{ ceems_lb_web_listen_address }} \
{% endif %}
{% if ceems_lb_tls_server_config | length > 0 or ceems_lb_http_server_config | length > 0 or ceems_lb_basic_auth_users | length > 0 %}
    --web.config.file=/etc/ceems_lb/web-config.yaml \
{% endif %}
{% for cli_arg in ceems_lb_cli_args %}
    {{ cli_arg }} \
{% endfor %}
    --config.file=/etc/ceems_lb/config.yaml

SyslogIdentifier=ceems_lb
Restart=always
RestartSec=1
StartLimitInterval=0

{% set ns = namespace(protect_home = 'yes') %}
{% for m in ansible_mounts if m.mount.startswith('/home') %}
{%   set ns.protect_home = 'read-only' %}
{% endfor %}
ProtectHome={{ ns.protect_home }}

NoNewPrivileges=yes

{% if ceems_lb_env_vars | length > 0 %}
{% for k, v in ceems_lb_env_vars.items() %}
Environment={{ k }}={{ v }}
{% endfor %}
{% endif %}

{% if (ansible_facts.packages.systemd | first).version is version('232', '>=') %}
ProtectSystem=strict
ProtectControlGroups=true
ProtectKernelModules=true
ProtectKernelTunables=yes
{% else %}
ProtectSystem=full
{% endif %}

[Install]
WantedBy=multi-user.target
