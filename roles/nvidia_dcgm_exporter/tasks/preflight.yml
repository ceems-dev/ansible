---
- name: Assert usage of systemd as an init system
  ansible.builtin.assert:
    that: ansible_service_mgr == 'systemd'
    msg: This role only works with systemd

- name: Install package fact dependencies
  become: true
  ansible.builtin.package:
    name: "{{ _pkg_fact_req }}"
    state: present
  when: (_pkg_fact_req)
  vars:
    _pkg_fact_req: "{% if (ansible_pkg_mgr == 'apt') %}\
      {{ ('python-apt' if ansible_python_version is version('3', '<') else 'python3-apt') }}
      {% else %}\
      {% endif %}"

- name: Gather package facts
  ansible.builtin.package_facts:
  when: not 'packages' in ansible_facts

- name: Naive assertion of proper listen address
  ansible.builtin.assert:
    that:
      - >-
        [nvidia_dcgm_exporter_web_listen_address] |
          flatten |
          reject('match', '.+:\\d+$') |
          list |
          length == 0

- name: Assert that TLS config is correct
  when: nvidia_dcgm_exporter_tls_server_config | length > 0
  block:
    - name: Assert that TLS key and cert path are set
      ansible.builtin.assert:
        that:
          - nvidia_dcgm_exporter_tls_server_config.cert_file is defined
          - nvidia_dcgm_exporter_tls_server_config.key_file is defined

    - name: Check existence of TLS cert file
      ansible.builtin.stat:
        path: "{{ nvidia_dcgm_exporter_tls_server_config.cert_file }}"
      register: __nvidia_dcgm_exporter_cert_file

    - name: Check existence of TLS key file
      ansible.builtin.stat:
        path: "{{ nvidia_dcgm_exporter_tls_server_config.key_file }}"
      register: __nvidia_dcgm_exporter_key_file

    - name: Assert that TLS key and cert are present
      ansible.builtin.assert:
        that:
          - "{{ __nvidia_dcgm_exporter_cert_file.stat.exists }}"
          - "{{ __nvidia_dcgm_exporter_key_file.stat.exists }}"

- name: Check if nvidia_dcgm_exporter is installed
  ansible.builtin.stat:
    path: "{{ nvidia_dcgm_exporter_binary_install_dir }}/nvidia_dcgm_exporter"
  register: __nvidia_dcgm_exporter_is_installed
  check_mode: false
  tags:
    - nvidia_dcgm_exporter_install

- name: Gather currently installed nvidia_dcgm_exporter version (if any)
  ansible.builtin.command: "{{ nvidia_dcgm_exporter_binary_install_dir }}/nvidia_dcgm_exporter --version"
  changed_when: false
  register: __nvidia_dcgm_exporter_current_version_output
  check_mode: false
  when: __nvidia_dcgm_exporter_is_installed.stat.exists
  tags:
    - nvidia_dcgm_exporter_install

- name: Discover latest version
  ansible.builtin.set_fact:
    nvidia_dcgm_exporter_version: "{{ (lookup('url', 'https://api.github.com/repos/{{ _nvidia_nvidia_dcgm_exporter_repo }}/releases/latest',
      headers=_github_api_headers, split_lines=False) | from_json).get('tag_name') | replace('v',
      '') }}"
  run_once: true
  until: nvidia_dcgm_exporter_version is version('0.0.0', '>=')
  retries: 10
  when:
    - nvidia_dcgm_exporter_version == "latest"
    - nvidia_dcgm_exporter_binary_local_dir | length == 0
    - not nvidia_dcgm_exporter_skip_install
