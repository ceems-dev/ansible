{{ ansible_managed | comment }}

[Unit]
Description=CEEMS API Server
After=network-online.target

[Service]
Type=simple
User={{ ceems_api_server_system_user }}
Group={{ ceems_api_server_system_group }}
ExecStart={{ ceems_api_server_binary_install_dir }}/ceems_api_server \
    --config.file=/etc/ceems_api_server/config.yaml \
{% if ceems_api_server_tls_server_config | length > 0 or ceems_api_server_http_server_config | length > 0 or ceems_api_server_basic_auth_users | length > 0 %}
    --web.config.file=/etc/ceems_api_server/web-config.yaml \
{% endif %}
{% for cli_arg in ceems_api_server_cli_args %}
    {{ cli_arg }} \
{% endfor %}
    --web.listen-address={{ ceems_api_server_web_listen_address }}

SyslogIdentifier=ceems_api_server
Restart=always
RestartSec=1
StartLimitInterval=0

{% set ns = namespace(protect_home = 'yes', caps = ['CAP_SETUID', 'CAP_SETGID']) %}
{% for m in ansible_mounts if m.mount.startswith('/home') %}
{%   set ns.protect_home = 'read-only' %}
{% endfor %}
ProtectHome={{ ns.protect_home }}
ReadWritePaths={{ _ceems_api_server_data_path }} {{ _ceems_api_server_data_backup_path }}
WorkingDirectory={{ _ceems_api_server_data_path }}

{% if ns.caps %}
AmbientCapabilities={{ ns.caps | unique | join(' ') }}
CapabilityBoundingSet={{ ns.caps | unique | join(' ') }}
{% else %}
NoNewPrivileges=yes
{% endif %}

{% if ceems_api_server_env_vars | length > 0 %}
{% for k, v in ceems_api_server_env_vars.items() %}
Environment={{ k }}={{ v }}
{% endfor %}
{% endif %}

{% if (ansible_facts.packages.systemd | first).version is version('232', '>=') %}
ProtectSystem=strict
ProtectControlGroups=true
ProtectKernelModules=true
ProtectKernelTunables=yes
{% else %}
ProtectSystem=full
{% endif %}

[Install]
WantedBy=multi-user.target
