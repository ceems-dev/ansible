---
- name: Run local preparation
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Install pyOpenSSL for certificate generation
      ansible.builtin.pip:
        name: pyOpenSSL

    - name: Create private key
      community.crypto.openssl_privatekey:
        path: /tmp/tls.key

    - name: Create CSR
      community.crypto.openssl_csr:
        path: /tmp/tls.csr
        privatekey_path: /tmp/tls.key

    - name: Create certificate
      community.crypto.x509_certificate:
        path: /tmp/tls.cert
        csr_path: /tmp/tls.csr
        privatekey_path: /tmp/tls.key
        provider: selfsigned

- name: Run target preparation
  hosts: all
  any_errors_fatal: true
  tasks:
    - name: Create sacct executable file
      ansible.builtin.copy:
        src: "../sacct"
        dest: /usr/bin/sacct
        owner: root
        group: root
        mode: u+rx,g+rx,o+rx

    - name: Create the slurm group
      ansible.builtin.group:
        name: slurm
        state: present
        system: true

    - name: Create the slurm user
      ansible.builtin.user:
        name: slurm
        groups: slurm
        append: true
        shell: /usr/sbin/nologin
        system: true
        create_home: false
        home: /

    - name: Create ceems_api_server cert dir
      ansible.builtin.file:
        path: "{{ ceems_api_server_tls_server_config.cert_file | dirname }}"
        state: directory
        owner: root
        group: root
        mode: u+rwX,g+rwX,o=rX

    - name: Copy cert and key
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
      loop:
        - src: /tmp/tls.cert
          dest: "{{ ceems_api_server_tls_server_config.cert_file }}"
        - src: /tmp/tls.key
          dest: "{{ ceems_api_server_tls_server_config.key_file }}"
